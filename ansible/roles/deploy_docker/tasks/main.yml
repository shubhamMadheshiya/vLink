---
- name: Ensure Docker is installed
  ansible.builtin.apt:
    name: docker.io
    state: present
    update_cache: yes

- name: Ensure Docker Compose is installed
  ansible.builtin.apt:
    name: docker-compose
    state: present
    update_cache: yes

- name: Log in to Nexus Docker registry
  community.docker.docker_login:
    registry_url: "http://{{ nexus_registry }}"
    username: "{{ nexus_username }}"
    password: "{{ nexus_password }}"

- name: Create app directory
  ansible.builtin.file:
    path: /opt/vlink
    state: directory

- name: Deploy docker-compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: /opt/vlink/docker-compose.yml

- name: Restart Docker service to clear any hung states
  ansible.builtin.systemd:
    name: docker
    state: restarted
    daemon_reload: yes
  # This crucial step ensures the Docker daemon is in a fresh, responsive state
  # before any Docker Compose operations are attempted. This addresses the
  # 'Read timed out' error experienced on sit1.

- name: Stop and remove existing Docker Compose project
  community.docker.docker_compose:
    project_src: /opt/vlink
    state: absent
  ignore_errors: yes
  # This task cleans up any previous deployment defined by the docker-compose.yml
  # in /opt/vlink. Using 'state: absent' ensures that old containers, networks,
  # and volumes are removed. 'ignore_errors: yes' makes the playbook robust
  # in cases where no previous project was running, or if the daemon was
  # initially unresponsive but fixed by the restart above.

- name: Remove Docker image to ensure a fresh pull
  community.docker.docker_image:
    name: "{{ nexus_registry }}/{{ docker_repo }}/{{ docker_image_name }}"
    tag: "{{ docker_image_tag }}"
    state: absent
  ignore_errors: yes
  # This task explicitly removes the Docker image that is about to be deployed.
  # This is crucial for resolving issues related to corrupted or outdated cached images.
  # By removing it, Docker is forced to pull the latest version from Nexus,
  # guaranteeing a clean start.

- name: Pull and run Docker container
  community.docker.docker_compose:
    project_src: /opt/vlink
    pull: yes
    restarted: yes
  # This task will now perform a fresh pull and deployment after the service restart
  # and thorough cleanup.
