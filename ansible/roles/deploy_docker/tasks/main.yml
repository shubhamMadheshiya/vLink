---
# Remove old/legacy Docker packages
- name: Remove old Docker and containerd versions
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
    purge: yes
    update_cache: yes

# Install prerequisites
- name: Install prerequisites for Docker repo
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

# Add Docker GPG key
- name: Add Docker GPG key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.gpg
    mode: '0644'
  register: docker_gpg
  until: docker_gpg is succeeded
  retries: 3
  delay: 5

# Add Docker apt repository (with signed-by)
- name: Add Docker apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

# Install Docker CE + plugins
- name: Install Docker CE
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes

# Ensure Docker service is running
- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: true

# Configure insecure registry
- name: Configure Docker to allow insecure registry
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "insecure-registries": ["{{ nexus_registry }}"]
      }
  notify: Restart docker

# Log in to Nexus
- name: Log in to Nexus Docker registry
  community.docker.docker_login:
    registry_url: "http://{{ nexus_registry }}"
    username: "{{ nexus_username }}"
    password: "{{ nexus_password }}"

# Create app directory
- name: Create app directory
  file:
    path: /opt/vlink
    state: directory

# Deploy docker-compose.yml
- name: Deploy docker-compose file
  template:
    src: docker-compose.yml.j2
    dest: /opt/vlink/docker-compose.yml

# Pull + run with docker-compose
- name: Pull and run Docker container
  community.docker.docker_compose:
    project_src: /opt/vlink
    pull: yes
    restarted: yes

- name: Restart docker
  service:
    name: docker
    state: restarted
